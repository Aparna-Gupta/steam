doctype
include mixins.jade
html.no-js
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible' content='IE=edge')
    title Steam
    meta(name='description' content='Fast Scalable Machine Learning for Smarter Applications')
    meta(name='viewport' content='width=device-width, initial-scale=1')
    link(rel='stylesheet' href='reset.css' type='text/css')
    link(rel='stylesheet' href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,300,200' type='text/css')
    link(rel='stylesheet' href='https://fonts.googleapis.com/css?family=Inconsolata' type='text/css')
    link(rel='stylesheet' href='http://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css' type='text/css')
    link(rel='stylesheet' href='styles.css' type='text/css')
    //-script(src='js/vendor/modernizr-2.7.1.min.js')
  body
    <!--[if lt IE 8]>
    p.browsehappy
      | You are using an <strong>outdated</strong> browser.
      | Please <a href="http://browsehappy.com/">upgrade your browser</a>
      | to improve your experience.
    <![endif]-->

    .main
      .logo S
      .titlebar
        .breadcrumbs
      // ko with:navBar
      .navbar(data-bind="template:{ name:'tmpl-navbar-button', foreach:buttons }")
      // /ko
      .body
        .workspace
          .pane-span(data-bind="style:{ width:span }")
          // ko foreach:panes
          .pane(data-bind="style:{ left:position.leftPx, width:position.widthPx }, template:{ name:$root.templateOf }, autoscroll:true")
          // /ko
      .statusbar
        // ko foreach:breadcrumbs
        .breadcrumb(data-bind="click:execute")
          .breadcrumb__arrow
          .breadcrumb__title(data-bind="text:title")
        // /ko

    // ko if:hasDialogs
    .mask
    .dialogs(data-bind="template: { name:'tmpl-dialog', foreach: dialogs}")
    // /ko

    // ko if:busyMessage
    .mask
    .busy
      .busy-message
        img(src="spinner.gif" style="margin-right:10px")
        span(data-bind="text:busyMessage")
    // /ko

    //
    // Templates
    //

    template.dialog
      .dialog
        .dialog__titlebar
          .dialog__title(data-bind="text:title")
          .dialog__exit(data-bind="click:cancel")
            i.icon.ion-ios-close-empty
        .dialog__body(data-bind="template:{ name:$root.templateOf }")

    template.register-cloud-dialog
      .dialog__form

        .form-field-label Cluster Address (IP:port):
        .form-field
          input.textbox(type='text' placeholder='IP:port' data-bind="value:address, valueUpdate:'afterkeydown'" style='width:300px')
        .form-field-error(data-bind="text:addressError")

        .form-error(data-bind='text:error')

      .dialog__actions
        .buttons.buttons--unit
          .button.button--primary(data-bind="click:registerCloud") Register Cluster
        .buttons.buttons--unit
          .button(data-bind="click:cancel") Cancel
    
    template.start-cloud-dialog
      .dialog__form

        .form-field-label Specify a name for this cluster:
        .form-field
          input.textbox(type='text' placeholder='Name' data-bind="value:cloudId, valueUpdate:'afterkeydown'" style='width:300px')
        .form-field-error(data-bind="text:cloudIdError")

        .form-field-label Which version of H2O should this cluster run?
        .form-field
          span.dropdown
            select.dropdown-select(data-bind="options:engines, value:engine, optionsText:'name', optionsCaption:'Choose Version...'")
        .form-field-error(data-bind="text:engineError")

        .form-field-label How many nodes should this cluster have?
        .form-field
          input.textbox(type='text' placeholder='Size' data-bind="value:cloudSize, valueUpdate:'afterkeydown'" style='width:50px')
        .form-field-error(data-bind="text:cloudSizeError")

        .form-field-label How much memory should each node have?
        .form-field
          input.textbox(type='text' placeholder='Memory' data-bind="value:cloudMemory, valueUpdate:'afterkeydown'" style='width:100px')
        .form-field-error(data-bind="text:cloudMemoryError")

        .form-error(data-bind='text:error')

      .dialog__actions
        .buttons.buttons--unit
          .button.button--primary(data-bind="click:startCloud") Start Cluster
        .buttons.buttons--unit
          .button(data-bind="click:cancel") Cancel

    template.build-model-dialog
      .dialog__form
        .form-field-label Specify a frame to train on:
        .form-field
          input.textbox(type='text' placeholder='Frame' data-bind="value:frame, valueUpdate:'afterkeydown'" style='width:90%')
        .form-field-error(data-bind="text:frameError")

        .form-field-label Specify the response column:
        .form-field
          input.textbox(type='text' placeholder='Response column name' data-bind="value:responseColumn, valueUpdate:'afterkeydown'" style='width:300px')
        .form-field-error(data-bind="text:responseColumnError")

        .form-field-label Specify the max run time:
        .form-field
          input.textbox(type='text' placeholder='Max run time' data-bind="value:maxRunTime, valueUpdate:'afterkeydown'" style='width:200px')
        .form-field-error(data-bind="text:maxRunTimeError")
        .form-error(data-bind='text:error')

      .dialog__actions
        .buttons.buttons--unit
          .button.button--primary(data-bind="click:buildModel") Start building
        .buttons.buttons--unit
          .button(data-bind="click:cancel") Cancel

    template.deploy-model-dialog
      .dialog__form
        .form-field-label Specify a port number for the scoring service:
        .form-field
          input.textbox(type='text' placeholder='Port' data-bind="value:port, valueUpdate:'afterkeydown'" style='width:50px')
        .form-field-error(data-bind="text:portError")

        .form-error(data-bind='text:error')

      .dialog__actions
        .buttons.buttons--unit
          .button.button--primary(data-bind="click:deployModel") Deploy
        .buttons.buttons--unit
          .button(data-bind="click:cancel") Cancel

    template.add-engine-dialog
      form.dialog__form(enctype='multipart/form-data' data-bind='element:form')
        .form-field-label Select the file to upload:
        .form-field
          input(name='file' type='file' data-bind='file:file')
          input(type='hidden' value='engine')

        .form-error(data-bind='text:error')

      .dialog__actions
        .buttons.buttons--unit
          .button.button--primary(data-bind="click:addEngine") Upload
        .buttons.buttons--unit
          .button(data-bind="click:cancel") Cancel

    template.navbar-button
      .navbar-button(data-bind="css:{ 'navbar-button--selected':isSelected }, click:execute")
        .navbar-button__icon
          i.icon(data-bind="css: icon")
        .navbar-button__title(data-bind="text:title")

    template.folder
      .folder(data-bind="click:execute")
        .folder__title(data-bind="text:title")
        .folder__detail
          span.folder__subhead(data-bind="text:subhead")
          span.folder__slug(data-bind="text:slug")

    template.folderI
      .folder(data-bind="click:execute")
        .folder__title(data-bind="text:title")
        .folder__detail
          span.folder__subhead(data-bind="text:subhead")
          span.folder__slug(data-bind="text:slug")
        // ko if:isActive
        .folder__detail
          span.folder__subhead(data-bind="text:subheadI")
          span.folder__slug(data-bind="text:slugI")
        // /ko

    template.clouds
      .pane__titlebar(data-bind="text:title")
      // ko if:error
      .pane__body.pane__body--02
        .pane-error(data-bind="text:error")
      // /ko
      // ko ifnot:error
      // ko if:hasItems
      .pane__body.pane__body--02(data-bind="template:{ name:$root.templateOf, foreach:items, afterRender:$root.afterRender }")
      // /ko
      // ko ifnot:hasItems
      .pane__body.pane__body--02
        .pane-icon
          i.icon.ion-ios-cloud-outline
        .pane-message You do not have any H2O clusters in Steam. Click 'Connect to cluster' or 'Start a cluster' to begin.
      // /ko
      // /ko
      .pane__actions.pane__actions--02
        .buttons
          .button.button--primary(data-bind="click:registerCloud") Connect to cluster
        .buttons
          .button.button--primary(data-bind="click:startCloud") Start a cluster

    template.cloud
      .pane__titlebar(data-bind="text:title")
      // ko if:error
      .pane__body.pane__body--01
        .pane-error(data-bind="text:error")
      // /ko
      // ko ifnot:error
      .pane__body.pane__body--01(data-bind="template:{ name:$root.templateOf, foreach:items, afterRender:$root.afterRender }")
      // /ko

    template.cloudInfo
      .pane__titlebar(data-bind="text:title")
      .pane__body.pane__body--01
        .pane__page
          table
            tbody
              tr
                th State
                td(data-bind="text:state")
              // ko with: cloudDetails
              tr
                th Version
                td(data-bind="text:engineVersion")
              // /ko
              // ko with: cloudDetails
              tr
                th Total Memory
                td(data-bind="text:totalMemory")
              tr
                th Total Cores
                td(data-bind="text:totalCores")
              tr
                th Allowed Cores
                td(data-bind="text:allowedCores")
              // /ko
              tr
                th Address
                td
                  a(target="_blank" data-bind="attr:{ href:address }, text:address")
              // ko with:yarnCluster
              tr
                th Engine
                td(data-bind="text:engine_id")
              tr
                th Total Nodes
                td(data-bind="text:size")
              tr
                th Application ID
                td(data-bind="text:application_id")
              tr
                th Username
                td(data-bind="text:username")             
              // /ko
              tr
                th Created
                td(data-bind="text:createdAt")
                          
        .buttons.buttons--unit
          // ko if:canStopCloud
          // ko if:canStop
          .button.button--danger(data-bind="click:stopCloud") Stop this cluster
          // /ko
          // /ko
          // ko ifnot:canStopCloud
          .button.button--danger(data-bind="click:unregisterCloud") Disconnect from cluster
          // /ko
        .pane-error(data-bind="text:error")
    
    template.cloudJobs
      .pane__titlebar(data-bind="text:title")
      // ko if:error
      .pane__body
        .pane-error(data-bind="text:error")
      // /ko

      // ko ifnot:error
      // ko if:hasItems
      .pane__body(data-bind="template:{ name:$root.templateOf, foreach:items, afterRender:$root.afterRender }")
      // /ko
      // ko ifnot:hasItems
      .pane__body
        .pane-icon
          i.icon.ion-ios-bolt-outline
        .pane-message This cluster has no jobs.
      // /ko
      // /ko

    template.cloudModels
      .pane__titlebar(data-bind="text:title")
      // ko if:error
      .pane__body.pane__body--01
        .pane-error(data-bind="text:error")
      // /ko
      // ko ifnot:error
      // ko if:hasItems
      .pane__body.pane__body--01(data-bind="template:{ name:$root.templateOf, foreach:items, afterRender:$root.afterRender }")
      // /ko
      // ko ifnot:hasItems
      .pane__body.pane__body--01
        .pane-icon
          i.icon.ion-ios-color-filter-outline
        .pane-message This cluster has no models.
      // /ko
      // /ko

      // ko if:canBuildModel
      .pane__actions
        .buttons
          .button.button--primary(data-bind="click:buildModel") Build a model
      // /ko

    template.cloudJob
      .pane__titlebar(data-bind="text:title")
      .pane__body.pane__body--01
        .pane__page
          h2 Job Details
          table
            tbody
              tr
                th Description
                td(data-bind="text:description")
              tr
                th Status
                td(data-bind="text:progress")
              tr
                th Start Time
                td(data-bind="text:createdAt")
              // ko if:finishedAt
              tr
                th End Time
                td(data-bind="text:finishedAt")
              // /ko

    template.cloudModel
      .pane__titlebar(data-bind="text:title")
      .pane__body.pane__body--01
        .pane__page
          h2 Model Details
          table
            tbody
              tr
                th Algo
                td(data-bind="text: algo")
              tr
                th Frame
                td(data-bind="text: frame")
              tr
                th Response Column
                td(data-bind="text: responseColumn")
              tr
                th Created
                td(data-bind="text:createdAt")
      .pane__actions
        .buttons.buttons--unit
          .button.button--primary(data-bind="click:getModel") Import model to Steam

    template.models
      .pane__titlebar(data-bind="text:title")
      // ko if:error
      .pane__body
        .pane-error(data-bind="text:error")
      // /ko
      // ko ifnot:error
      // ko if:hasItems
      .pane__body(data-bind="template:{ name:$root.templateOf, foreach:items, afterRender:$root.afterRender }")
      // /ko
      // ko ifnot:hasItems
      .pane__body
        .pane-icon
          i.icon.ion-ios-color-filter-outline
        .pane-message You do not have any models.
      // /ko
      // /ko

    template.model
      .pane__titlebar(data-bind="text:title")
      .pane__body.pane__body--01
        .pane__page
          h2 Model Details
          table
            tbody
              tr
                th Algo
                td(data-bind="text: algo")
              tr
                th Frame
                td(data-bind="text: frame")
              tr
                th Response Column
                td(data-bind="text: responseColumn")
              tr
                th Max Run Time
                td(data-bind="text: maxRunTime")
              tr
                th Created
                td(data-bind="text:createdAt")
      .pane__actions
        .buttons.buttons--unit
          .button.button--primary(data-bind="click:deployModel") Deploy this model...
        .buttons.buttons--unit
          .button.button--danger(data-bind="click:deleteModel") Delete model

    template.services
      .pane__titlebar(data-bind="text:title")
      // ko if:error
      .pane__body
        .pane-error(data-bind="text:error")
      // /ko
      // ko ifnot:error
      // ko if:hasItems
      .pane__body(data-bind="template:{ name:$root.templateOf, foreach:items, afterRender:$root.afterRender }")
      // /ko
      // ko ifnot:hasItems
      .pane__body
        .pane-icon
          i.icon.ion-ios-world-outline
        .pane-message You do not have any services.
      // /ko
      // /ko

    template.service
      .pane__titlebar(data-bind="text:title")
      .pane__body.pane__body--01
        .pane__page
          h2 Scoring Service Details
          table
            tbody
              tr
                th State
                td(data-bind="text: state")
              tr
                th Endpoint
                td
                  a(target="_blank" data-bind="attr:{ href:url }, text:url")
              tr
                th Process ID
                td(data-bind="text: pid")
              tr
                th Created
                td(data-bind="text:createdAt")
      .pane__actions
        // ko if:canStop
        .buttons.buttons--unit
          .button.button--danger(data-bind="click:stopService") Stop this service
        // /ko

    template.assets
      .pane__titlebar(data-bind="text:title")
      .pane__body(data-bind="template:{ name:$root.templateOf, foreach:items, afterRender:$root.afterRender }")

    template.engines
      .pane__titlebar(data-bind="text:title")
      // ko if:error
      .pane__body.pane__body--01
        .pane-error(data-bind="text:error")
      // /ko
      // ko ifnot:error
      // ko if:hasItems
      .pane__body.pane__body--01(data-bind="template:{ name:$root.templateOf, foreach:items, afterRender:$root.afterRender }")
      // /ko
      // ko ifnot:hasItems
      .pane__body.pane__body--01
        .pane-icon
          i.icon.ion-ios-box-outline
        .pane-message You do not have any H2O engines. Click 'Add Engine...' to begin.
      // /ko
      // /ko
      .pane__actions
        .buttons
          .button.button--primary(data-bind="click:addEngine") Add Engine...

    template.engine
      .pane__titlebar(data-bind="text:title")
      .pane__body.pane__body--01
        .pane__page
          h2 Engine Details
          table
            tbody
              tr
                th Path
                td(data-bind="text: path")
              tr
                th Created
                td(data-bind="text: createdAt")
      .pane__actions
        .buttons.buttons--unit
          .button.button--danger(data-bind="click:deleteEngine") Delete Engine


    script(src='jquery.min.js')
    script(src='async.min.js')
    script(src='underscore-min.js')
    script(src='moment.min.js')
    script(src='knockout.js')
    script(src='mousetrap.min.js')
    script(src='faker.min.js')
    script(src='main.js')
