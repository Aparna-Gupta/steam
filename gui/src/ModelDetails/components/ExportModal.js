/*
  Copyright (C) 2016 H2O.ai, Inc. <http://h2o.ai/>

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as
  published by the Free Software Foundation, either version 3 of the
  License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * Created by justin on 7/21/16.
 */
var React = require('react');
var DefaultModal_1 = require('../../App/components/DefaultModal');
require('../styles/exportmodal.scss');
var deployment_actions_1 = require('../../Deployment/actions/deployment.actions');
var redux_1 = require('redux');
var react_redux_1 = require('react-redux');
var ExportModal = (function (_super) {
    __extends(ExportModal, _super);
    function ExportModal() {
        _super.call(this);
        this.state = {
            artifact: 'java-class',
            packageName: ''
        };
    }
    ExportModal.prototype.componentWillMount = function () {
        this.props.fetchPackages(this.props.projectId);
    };
    ExportModal.prototype.selectArtifact = function (event) {
        if (event.target === this.refs.packageSelect) {
            this.setState({
                packageName: event.target.value
            });
        }
        else {
            this.setState({
                artifact: event.target.value
            });
        }
    };
    ExportModal.prototype.render = function () {
        return (React.createElement(DefaultModal_1.default, {className: "export-modal", open: this.props.open}, React.createElement("header", null, "EXPORT ", this.props.name), React.createElement("section", null, React.createElement("form", {onSubmit: this.props.onDownload.bind(this), onChange: this.selectArtifact.bind(this)}, React.createElement("div", {className: "form-option"}, React.createElement("div", null, React.createElement("span", null, "FILE FORMAT")), React.createElement("div", null, React.createElement("fieldset", null, React.createElement("input", {type: "radio", value: "java-class", name: "downloadOption", checked: this.state.artifact === 'java-class', onChange: this.selectArtifact.bind(this)}), React.createElement("label", null, React.createElement("span", {className: "file-extension"}, ".java"), React.createElement("span", null, "a POJO generated by H2O"))), React.createElement("fieldset", null, React.createElement("input", {type: "radio", value: "java-jar", name: "downloadOption", checked: this.state.artifact === 'java-jar', onChange: this.selectArtifact.bind(this)}), React.createElement("label", null, React.createElement("span", {className: "file-extension"}, ".jar"), React.createElement("span", null, "a library file, can be used by java apps"))), React.createElement("fieldset", null, React.createElement("input", {type: "radio", value: "java-war", name: "downloadOption", checked: this.state.artifact === 'java-war', onChange: this.selectArtifact.bind(this)}), React.createElement("label", null, React.createElement("span", {className: "file-extension"}, ".war"), React.createElement("span", null, "a java-based web app, can be used by Jetty / Tomcat"))))), React.createElement("div", {className: "form-option"}, React.createElement("div", null, React.createElement("span", null, "ADVANCED OPTIONS")), React.createElement("div", null, React.createElement("div", null, "Choose a preprocessing script package"), React.createElement("div", {className: "package-select"}, React.createElement("select", {ref: "packageSelect"}, React.createElement("option", {value: ""}, "None (Default)"), this.props.packages.map(function (script, i) {
            return React.createElement("option", {key: i, value: script}, script);
        }))))), React.createElement("div", {className: "form-option"}, React.createElement("div", null), React.createElement("div", {className: "actions"}, React.createElement("div", null, "Steam defaults to your browser default Downloads Folders"), React.createElement("a", {href: "/download?type=model&artifact=" + (this.state.packageName && this.state.artifact === 'java-war' ? 'java-py-war' : this.state.artifact) + "&model-id=" + this.props.modelId + "&project-id=" + this.props.projectId + "&package-name=" + this.state.packageName, className: "default", target: "_blank", rel: "noopener"}, "Download"), React.createElement("button", {type: "button", className: "default invert", onClick: this.props.onCancel}, "Cancel")))))));
    };
    return ExportModal;
}(React.Component));
exports.ExportModal = ExportModal;
function mapStateToProps(state) {
    return {
        packages: state.deployments.packages
    };
}
function mapDispatchToProps(dispatch) {
    return {
        fetchPackages: redux_1.bindActionCreators(deployment_actions_1.fetchPackages, dispatch)
    };
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(ExportModal);
//# sourceMappingURL=ExportModal.js.map